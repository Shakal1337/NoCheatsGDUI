<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NoCheatsGD_UI_"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors" x:Name="window" x:Class="NoCheatsGD_UI_.MainWindow"
        mc:Ignorable="d"
        Title="NoCheatsGD" Height="540" Width="960" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" Foreground="{x:Null}" Background="{x:Null}" WindowStyle="None" AllowsTransparency="True">
    <Window.Resources>
        <Storyboard x:Key="startupani">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:01.7000000" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.385"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0.997">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:01.7000000" Value="0.997"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="0.072"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.337"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:01.7000000" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="0.067"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.6000000" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.7000000" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="welcome" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="txt1" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="check" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="gdbotoff" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="gdhmoff" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="other" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="helpbutt" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="info" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="github" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="configset" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="closewhite" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:01.7000000" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="422.393"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:01.7000000" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.9000000" Value="233.558"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:01.7000000" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:01.9000000" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>

    <Window.Clip>
        <RectangleGeometry Rect="0,0,960,540" RadiusX="35" RadiusY="35"/>
    </Window.Clip>


    <Grid x:Name="grid">
        <b:Interaction.Triggers>
            <b:EventTrigger EventName="Loaded">
                <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{Binding Mode=OneWay, Source={StaticResource startupani}}"/>
            </b:EventTrigger>
        </b:Interaction.Triggers>
        <Grid.Background>
            <ImageBrush ImageSource="/Resources/back.png"/>
        </Grid.Background>

        <Rectangle x:Name="rectangle" HorizontalAlignment="Left" Height="540" VerticalAlignment="Center" Width="960" RadiusX="35" RadiusY="35" Opacity="0" RenderTransformOrigin="0.5,0.5">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Rectangle.RenderTransform>
            <Rectangle.Fill>
                <ImageBrush ImageSource="/Resources/back.png"/>
            </Rectangle.Fill>
        </Rectangle>

        <Label x:Name="welcome" Content="Welcome" HorizontalAlignment="Center" Height="80" VerticalAlignment="Top" Width="290" FontSize="60" FontFamily="Coconut" Foreground="White" Margin="0,30,0,0" Background="{x:Null}"/>

        <Label x:Name="txt1" Content="выберите какой компонент вы собираетесь отключить" HorizontalAlignment="Center" Height="39" Margin="0,97,0,0" VerticalAlignment="Top" Width="778" FontSize="25" FontFamily="Coconut" Foreground="White" Background="{x:Null}"/>

        <Image x:Name="check" HorizontalAlignment="Center" Height="25" Margin="0,143,0,0" VerticalAlignment="Top" Width="216" Source="/Resources/check.png"/>

        <Image x:Name="uncheked" HorizontalAlignment="Center" Height="25" Margin="0,143,0,0" VerticalAlignment="Top" Width="335" Source="/Resources/cross.png" Visibility="Hidden"/>

        <Button x:Name="gdbotoff"
                Content="" 
                HorizontalAlignment="Center"
                Height="100" 
                Margin="0,176,0,0" 
                VerticalAlignment="Top"
                Width="416" 
                BorderBrush="{x:Null}" 
                Foreground="{x:Null}" 
                BorderThickness="1" 
                Click="gdbotoffon">
            <Button.Background>
                <ImageBrush x:Name="im" ImageSource="/Resources/button gdbot off.png"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <ImageBrush/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>

        </Button>

        <Button x:Name="gdboton" 
                Content="" 
                HorizontalAlignment="Center" 
                Height="100"
                Margin="0,176,0,0" 
                VerticalAlignment="Top" 
                Width="416" BorderBrush="{x:Null}" 
                Foreground="{x:Null}"
                BorderThickness="1"
                Visibility="Hidden" Opacity="100" Click="gdboton_clck">
            <Button.Background>
                <ImageBrush ImageSource="/Resources/button gdbot on.png"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <ImageBrush/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="gdhmoff" 
                Content=""
                HorizontalAlignment="Left" 
                Height="100" 
                Margin="272,296,0,0"
                VerticalAlignment="Top" 
                Width="328" 
                BorderBrush="{x:Null}" 
                Foreground="{x:Null}" 
                BorderThickness="1" Click="gdhmoff_clck" >
            <Button.Background>
                <ImageBrush ImageSource="/Resources/gdhm off button.png"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <ImageBrush/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>


        <Button x:Name="gdhmon" 
                Content="" 
                HorizontalAlignment="Left" 
                Height="100" 
                Margin="272,296,0,0" 
                VerticalAlignment="Top" 
                Width="328" 
                BorderBrush="{x:Null}"
                Foreground="{x:Null}" 
                BorderThickness="1"
                Visibility="Hidden" Click="gdhmon_clck">
            <Button.Background>
                <ImageBrush ImageSource="/gdhm on button.png"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <ImageBrush/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>



        <Button x:Name="other"
                Content="" 
                HorizontalAlignment="Left" 
                Height="95"
                Margin="593,296,0,0" 
                VerticalAlignment="Top" 
                Width="95" 
                Foreground="{x:Null}" 
                BorderBrush="{x:Null}">
            <Button.Background>
                <ImageBrush ImageSource="/Resources/othetbutt.png"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <ImageBrush/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="helpbutt"
                Content="Help/Помощь" 
                HorizontalAlignment="Center"
                Height="27" Margin="0,384,0,0" 
                VerticalAlignment="Top" 
                Width="147"
                FontSize="20" 
                BorderBrush="{x:Null}" 
                FontFamily="Coconut" 
                Foreground="White" 
                Background="{x:Null}">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <ImageBrush/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>


        <Button x:Name="info"
                    HorizontalAlignment="Left" 
                    Height="72" 
                    Margin="373,439,0,0" 
                    VerticalAlignment="Top" 
                    Width="72"
                    Foreground="{x:Null}" 
                    BorderBrush="{x:Null}">
            <Button.Background>
                <ImageBrush ImageSource="/info-button.png"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <ImageBrush/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="github"
                HorizontalAlignment="Left" 
                Height="72" 
                Margin="446,439,0,0" 
                VerticalAlignment="Top" 
                Width="72"
                Foreground="{x:Null}"
                BorderBrush="{x:Null}">
            <Button.Background>
                <ImageBrush ImageSource="/github-mark.png"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <ImageBrush/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="configset" 
                HorizontalAlignment="Left"
                Height="72" 
                Margin="519,439,0,0"
                VerticalAlignment="Top"
                Width="72"
                Foreground="{x:Null}"
                BorderBrush="{x:Null}">
            <Button.Background>
                <ImageBrush ImageSource="/Setting-Icon.png"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <ImageBrush/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="closered"
                Content="Button"
                HorizontalAlignment="Left" 
                Height="50"
                Margin="900,10,0,0"
                VerticalAlignment="Top" 
                Width="50" 
                BorderBrush="{x:Null}" 
                Foreground="{x:Null}" 
                Opacity="0" MouseLeave="crossredLeave">
            <Button.Background>
                <ImageBrush ImageSource="/Resources/crossred.png"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <ImageBrush/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="closewhite" 
                Content="Button"
                HorizontalAlignment="Left"
                Height="50" 
                Margin="900,10,0,0" 
                VerticalAlignment="Top"
                Width="50" 
                BorderBrush="{x:Null}" 
                Foreground="{x:Null}" Click="close" MouseEnter="crosswhiteEnter">
            <Button.Background>
                <ImageBrush ImageSource="/Resources/crosswhite.png"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <ImageBrush/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="Button" HorizontalAlignment="Left" Height="59" Margin="91,247,0,0" VerticalAlignment="Top" Width="91" Click="Button_Click"/>

    </Grid>
</Window>
